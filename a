/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   validate_line.c                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: fheld <fheld@student.42.fr>                +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/07/10 19:47:46 by fhled             #+#    #+#             */
/*   Updated: 2022/07/10 21:12:15 by fheld            ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

int	ft_atoi(char *str);

int	isws(char c)
{
	return (c == ' ' || (c >= 9 && c <= 13 && c != 10));
}

int	c_is_printable(char c)
{
	return (c >= 32 && c <= 126);
}

int	is_num(char c)
{
	return (c >= '0' && c <= '9');
}

int	validate_line_partial(char *line)
{
	int	count;
	int	count_dig;

	count = 0;
	count_dig = 0;
	while (isws(line[count]) == 1)
	{
		count++;
	}
	if (line[count] == '-')
		return (0);
	if (line[count] == '+')
		count++;
	while (line[count] == '0')
		count++;
	while (is_num(line[count]) == 1)
	{
		count_dig++;
		count++;
	}
	if (count_dig > 10)
		return (0);
	if (count_dig > 2 && line[count - count_dig] != '1')
		return (0);
	return (1);
}

int valid_numbers(int num)
{
	int c1;
	int c2;
	int c3;

	c1 = (num >= 0 && num <= 20);
	c2 = (num % 10 == 0 && num / 10 > 1 && num / 10 < 11);
	c3 = (num == 1000 || num == 1000000 || num == 1000000000);
	return(c1 || c2 || c3);
}

int	validate_line(char *line)
{
	int num;

	if(validate_line_partial(line) == 0)
		return (0);
	num = ft_atoi(line);
	if (valid_numbers(num) == 0)
		return(0);
	while (*line != ':' && *line != '\n')
		line++;
	if (*line == '\n')
		return (0);
	while (*line != '\n')
	{
		if (c_is_printable(*line) == 0)
			return(0);
		line++;
	}
}

void map_line_to_list(char *line, char **list_sml)
{
	int		num;

	num = ft_atoi(line);
	while(*line != ':')
		line++;
	while(isws(line))
	if (num <= 20)
		list_sml[num] = line_after_colon;
}
